st_transform(crs = 5179)
residence <- st_read(dsn = "data_final/seoul_residential",
layer = "seoul_residential") %>%
st_transform(crs = 5179)
road <- st_read(dsn="data_final/seoul_roads",
layer = "seoul_roads_v2")%>%
st_transform(crs = 5179)
clinic <- clinics %>%
select(1,3)
hospitals <- hospitals %>%
select(1,3)
residence <- residence %>%
select(1,3)
road <- road %>%
select(1,3)
Ihwa <- seoul %>%
filter(name_en == "Gangnam-gu") %>%
select(name_en)
pacman::p_load(sf, spNetwork)
R <- st_intersection(road, Ihwa)
H <- st_intersection(hospitals, Ihwa)
RE <- st_intersection(residence, Ihwa)
H_P <- st_centroid(H)
RE_P <- st_centroid(RE)
if ("MULTILINESTRING" %in% st_geometry_type(R)){
converted <- st_cast(R[which(st_geometry_type(R) == "MULTILINESTRING"),], "LINESTRING")
linestring <- R[which(st_geometry_type(R) == "LINESTRING"),]
roads_by_gu_new<- rbind(linestring, converted)
}
# Filter out only LINESTRING geometries
lixels <- lixelize_lines(roads_by_gu_new, 700, mindist = 350)
samples <- lines_center(lixels)
hospital_by_gwanak_sp <- as_Spatial(H_P)
densities <- nkde(roads_by_gu_new,
events = H_P,
w = rep(1,nrow(H_P)),
samples = samples,
kernel_name = "quartic",
bw = 300,
div= "bw",
adaptive = FALSE,
method = "continuous",
digits = 1,
tol = 1,
grid_shape = c(1,1),
max_depth = 8,
agg = 20, #we aggregate events within a 5m radius (faster calculation)
sparse = TRUE,
verbose = FALSE)
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Reds") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Reds") +
tm_shape(H_P) +
tm_dots(col = "Blue",
size =0.01)
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Red") +
tm_shape(H_P) +
tm_dots(col = "lue",
size =0.01)
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Reds") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
View(lixels)
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density") +
tm_shape(H_P) +
tm_dots(size =0.01)
samples$density <- densities*1000
lixels$density <- densities*1000
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Reds") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
kfun_hospital <- kfunctions(roads_by_gu_new,
H_P,
start = 0,
end = 10000,
step = 50,
width = 50,
nsim = 50,
resolution = 50,
verbose = FALSE,
digits = 10,
conf_int = 0.05)
kfun_hospital$plotk
crossfun_hospital<- cross_kfunctions(roads_by_gu_new,
RE_P,
H_P,
start= 0,
end = 2500,
step = 50,
width = 50,
nsim = 50,
agg = 100,
conf_int = 0.05)
crossfun_hospital$plotk
# Filter out only LINESTRING geometries
lixels <- lixelize_lines(roads_by_gu_new, 1500, mindist = 350)
samples <- lines_center(lixels)
hospital_by_gwanak_sp <- as_Spatial(H_P)
densities <- nkde(roads_by_gu_new,
events = H_P,
w = rep(1,nrow(H_P)),
samples = samples,
kernel_name = "quartic",
bw = 300,
div= "bw",
adaptive = FALSE,
method = "continuous",
digits = 1,
tol = 1,
grid_shape = c(1,1),
max_depth = 8,
agg = 20, #we aggregate events within a 5m radius (faster calculation)
sparse = TRUE,
verbose = FALSE)
samples$density <- densities*1000
lixels$density <- densities*1000
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Reds") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
?nkde()
# Filter out only LINESTRING geometries
lixels <- lixelize_lines(roads_by_gu_new, 700, mindist = 350)
samples <- lines_center(lixels)
hospital_by_gwanak_sp <- as_Spatial(H_P)
densities <- nkde(roads_by_gu_new,
events = H_P,
w = rep(1,nrow(H_P)),
samples = samples,
kernel_name = "quartic",
bw = 300,
div= "bw",
adaptive = FALSE,
method = "continuous",
digits = 1,
tol = 1,
grid_shape = c(1,1),
max_depth = 8,
agg = 20, #we aggregate events within a 5m radius (faster calculation)
sparse = TRUE,
verbose = FALSE)
samples$density <- densities*100000
lixels$density <- densities*100000
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Reds") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
densities <- nkde(roads_by_gu_new,
events = H_P,
w = rep(1,nrow(H_P)),
samples = samples,
kernel_name = "quartic",
bw = 300,
div= "bw",
adaptive = FALSE,
method = "continuous",
digits = 1,
tol = 1,
grid_shape = c(1,1),
max_depth = 8,
agg = 200, #we aggregate events within a 5m radius (faster calculation)
sparse = TRUE,
verbose = FALSE)
samples$density <- densities*100000
lixels$density <- densities*100000
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Reds") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
densities <- nkde(roads_by_gu_new,
events = H_P,
w = rep(1,nrow(H_P)),
samples = samples,
kernel_name = "quartic",
bw = 300,
div= "bw",
adaptive = FALSE,
method = "continuous",
digits = 1,
tol = 1,
grid_shape = c(1,1),
max_depth = 8,
agg = 1000, #we aggregate events within a 5m radius (faster calculation)
sparse = TRUE,
verbose = FALSE)
samples$density <- densities*1000
lixels$density <- densities*1000
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Reds") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
densities <- nkde(roads_by_gu_new,
events = H_P,
w = rep(1,nrow(H_P)),
samples = samples,
kernel_name = "quartic",
bw = 300,
div= "bw",
adaptive = FALSE,
method = "continuous",
digits = 1,
tol = 200,
grid_shape = c(1,1),
max_depth = 8,
agg = 5, #we aggregate events within a 5m radius (faster calculation)
sparse = TRUE,
verbose = FALSE)
samples$density <- densities*1000
lixels$density <- densities*1000
tmap_mode('view')
tm_shape(lixels)+
tm_lines(col="density",
palette = "Reds") +
tm_shape(H_P) +
tm_dots(col = "blue",
size =0.01)
kfun_hospital$plotg
crossfun_hospital$plotg
crossfun_hospital$plotk
shiny::runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
childcare_sf <- st_read("data/child-care-services-geojson.geojson")
childcare_sf <- st_read("child-care-services-geojson.geojson")
write_rds(childcare_sf, "childcare.rds")
runApp('Test')
Bus_stop <- st_read("test_data",
layer= "BusStop")
write_rds(Bus_stop, "bus.rds")
runApp('Test')
shiny::runApp('Test')
runApp('Test')
runApp('Test')
pacman::p_load(sf, readr, tidyverse, tmap)
clinic <- clinics %>%
dplyr::select(1,3)
Hospital_point <- st_centroid(hospitals)
clinics <- st_read(dsn = "data_final/seoul_clinics",
layer = "seoul_clinics") %>%
st_transform(crs = 5179)
hospitals <- st_read(dsn = "data_final/seoul_hospitals",
layer = "seoul_hospitals") %>%
st_transform(crs = 5179)
residence <- st_read(dsn = "data_final/seoul_residential",
layer = "seoul_residential") %>%
st_transform(crs = 5179)
road <- st_read(dsn="data_final/seoul_roads",
layer = "seoul_roads_v2")%>%
st_transform(crs = 5179)
clinic <- clinics %>%
dplyr::select(1,3)
hospitals <- hospitals %>%
dplyr::select(1,3)
residence <- residence %>%
dplyr::select(1,3)
road <- road %>%
dplyr::select(1,3)
Hospital_point <- st_centroid(hospitals)
residence_point <- st_centroid(residence)
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
seoul <- st_read(dsn = "data_final/seoul_adm2",
layer= "seoul_adm2") %>%
st_transform(crs = 5179)
seoul <- st_read(dsn = "data_final/seoul_adm2",
layer= "seoul_adm2")
write_rds(seoul, "seoul.rds")
road <- st_read(dsn="data_final/seoul_roads",
layer = "seoul_roads_v2")
if ("MULTILINESTRING" %in% st_geometry_type(road)){
converted <- st_cast(road[which(st_geometry_type(road) == "MULTILINESTRING"),], "LINESTRING")
linestring <- road[which(st_geometry_type(road) == "LINESTRING"),]
roads_by_gu_new<- rbind(linestring, converted)
}
write_rds(roads_by_gu_new, "road.rds")
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
install.packages("shinycssloaders")
runApp('Test')
shiny::runApp('Test')
install.packages("shinythemes")
runApp('Test')
install.packages("shinycssloaders")
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
H3 <- readRDS("C:/yifei-alpaca/Geospatial-Analytics-Project-KR/korea_rds_data/H3.rds")
View(H3)
R3 <- readRDS("C:/yifei-alpaca/Geospatial-Analytics-Project-KR/korea_rds_data/R3.rds")
View(R3)
Re3 <- readRDS("C:/yifei-alpaca/Geospatial-Analytics-Project-KR/korea_rds_data/Re3.rds")
View(Re3)
S3 <- readRDS("C:/yifei-alpaca/Geospatial-Analytics-Project-KR/korea_rds_data/S3.rds")
View(S3)
View(H3)
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test/sherry_app.R')
runApp('Test/sherry_app.R')
runApp('Test/sherry_app.R')
library(shiny); runApp('Test/sherry_app.R')
runApp('Test/sherry_app.R')
runApp('Test/sherry_app.R')
runApp('Test/sherry_app.R')
library(shiny); runApp('Test/sherry_app.R')
pacman::p_load(readr)
Hospital_en <- read_rds("Hospital_en.rds")
Residence_en <- read_rds("Residence_en.rds")
Seoul_en <- read_rds("Seoul_en.rds")
Road_en<- read_rds("Road_en.rds")
Road_en <- Road_en %>%
dplyr::select(name_en)
st_crs(Hospital_en)
pacman::p_load(readr,sf)
st_crs(Hospital_en)
st_crs(Residence_en)
st_crs(Road_en)
View(Road_en)
pacman::p_load(readr,sf,dplyr)
Road_en <- Road_en %>%
dplyr::select(name_en)
if ("MULTILINESTRING" %in% st_geometry_type(Road_en)){
converted <- st_cast(Road_en[which(st_geometry_type(Road_en) == "MULTILINESTRING"),], "LINESTRING")
linestring <- Road_en[which(st_geometry_type(Road_en) == "LINESTRING"),]
roads_by_gu_new<- rbind(linestring, converted)
}
Road_en <- roads_by_gu_new
Gwanak_Yangcheon_Seocho_Hospital <- Hospital_en %>%
filter(name_en %in% c("Gwanak-gu","Yangcheon-gu","Seocho-gu"))
Gwanak_Yangcheon_Seocho_Residence <- Residence_en %>%
filter(name_en %in% c("Gwanak-gu","Yangcheon-gu","Seocho-gu"))
Gwanak_Yangcheon_Seocho_Road <- Road_en %>%
filter(name_en %in% c("Gwanak-gu","Yangcheon-gu","Seocho-gu"))
Gwanak_Yangcheon_Seocho_StudyArea <- Seoul %>%
filter(name_en %in% c("Gwanak-gu","Yangcheon-gu","Seocho-gu"))
Seoul <- read_rds("Seoul_en.rds")
Gwanak_Yangcheon_Seocho_Hospital <- Hospital_en %>%
filter(name_en %in% c("Gwanak-gu","Yangcheon-gu","Seocho-gu"))
Gwanak_Yangcheon_Seocho_Residence <- Residence_en %>%
filter(name_en %in% c("Gwanak-gu","Yangcheon-gu","Seocho-gu"))
Gwanak_Yangcheon_Seocho_Road <- Road_en %>%
filter(name_en %in% c("Gwanak-gu","Yangcheon-gu","Seocho-gu"))
Gwanak_Yangcheon_Seocho_StudyArea <- Seoul %>%
filter(name_en %in% c("Gwanak-gu","Yangcheon-gu","Seocho-gu"))
write_rds(Gwanak_Yangcheon_Seocho_Hospital, "Gwanak_Yangcheon_Seocho_Hospital.rds")
write_rds(Gwanak_Yangcheon_Seocho_Residence, "Gwanak_Yangcheon_Seocho_Residence.rds")
write_rds(Gwanak_Yangcheon_Seocho_Road, "Gwanak_Yangcheon_Seocho_Road.rds")
write_rds(Gwanak_Yangcheon_Seocho_StudyArea, "Gwanak_Yangcheon_Seocho_StudyArea.rds")
Yeongdeungpo_Gangnam_Eunpyeong_Hospital <- Hospital_en %>%
filter(name_en %in% c("Yeongdeung-gu","Gangnam-gu","Eunpyeong-gu"))
Yeongdeungpo_Gangnam_Eunpyeong_Residence <- Residence_en %>%
filter(name_en %in% c("Yeongdeung-gu","Gangnam-gu","Eunpyeong-gu"))
Yeongdeungpo_Gangnam_Eunpyeong_Road <- Road_en %>%
filter(name_en %in% c("Yeongdeung-gu","Gangnam-gu","Eunpyeong-gu"))
Yeongdeungpo_Gangnam_Eunpyeong_StudyArea <- Seoul %>%
filter(name_en %in% c("Yeongdeung-gu","Gangnam-gu","Eunpyeong-gu"))
write_rds(Yeongdeungpo_Gangnam_Eunpyeong_Hospital,"Yeongdeungpo_Gangnam_Eunpyeong_Hospital.rds")
write_rds(Yeongdeungpo_Gangnam_Eunpyeong_Residence,"Yeongdeungpo_Gangnam_Eunpyeong_Residence.rds")
write_rds(Yeongdeungpo_Gangnam_Eunpyeong_Road,"Yeongdeungpo_Gangnam_Eunpyeong_Road.rds")
write_rds(Yeongdeungpo_Gangnam_Eunpyeong_StudyArea, "Yeongdeungpo_Gangnam_Eunpyeong_StudyArea.rds")
Guro_Geumcheon_Gangseo_Hospital <- Hospital_en %>%
filter(name_en %in% c("Guro-gu","Geumcheon-gu","Gangseo-gu"))
Guro_Geumcheon_Gangseo_Residence <- Residence_en %>%
filter(name_en %in% c("Guro-gu","Geumcheon-gu","Gangseo-gu"))
Guro_Geumcheon_Gangseo_Road <- Road_en %>%
filter(name_en %in% c("Guro-gu","Geumcheon-gu","Gangseo-gu"))
Guro_Geumcheon_Gangseo_StudyArea <- Seoul %>%
filter(name_en %in% c("Guro-gu","Geumcheon-gu","Gangseo-gu"))
write_rds(Guro_Geumcheon_Gangseo_Hospital,"Guro_Geumcheon_Gangseo_Hospital.rds")
write_rds(Guro_Geumcheon_Gangseo_Residence,"Guro_Geumcheon_Gangseo_Residence.rds")
write_rds(Guro_Geumcheon_Gangseo_Road, "Guro_Geumcheon_Gangseo_Road.rds")
write_rds(Guro_Geumcheon_Gangseo_StudyArea,"Guro_Geumcheon_Gangseo_StudyArea.rds")
Dongjak_Yongsan_Songpa_Hospital <- Hospital_en %>%
filter(name_en %in% c("Dongjak-gu","Yongsan-gu","Songpa-gu"))
Dongjak_Yongsan_Songpa_Residence <- Residence_en %>%
filter(name_en %in% c("Dongjak-gu","Yongsan-gu","Songpa-gu"))
Dongjak_Yongsan_Songpa_Road <- Road_en %>%
filter(name_en %in% c("Dongjak-gu","Yongsan-gu","Songpa-gu"))
Dongjak_Yongsan_Songpa_StudyArea <- Seoul %>%
filter(name_en %in% c("Dongjak-gu","Yongsan-gu","Songpa-gu"))
write_rds(Dongjak_Yongsan_Songpa_Hospital,"Dongjak_Yongsan_Songpa_Hospital.rds")
write_rds(Dongjak_Yongsan_Songpa_Residence, "Dongjak_Yongsan_Songpa_Residence.rds")
write_rds(Dongjak_Yongsan_Songpa_Road,"Dongjak_Yongsan_Songpa_Road.rds")
write_rds(Dongjak_Yongsan_Songpa_StudyArea, "Dongjak_Yongsan_Songpa_StudyArea.rds")
Seongdong_Seongbuk_Seodaemun_Hospital <- Hospital_en %>%
filter(name_en %in% c("Seongdong-gu","Seongbuk-gu","Seodaemun-gu"))
Seongdong_Seongbuk_Seodaemun_Residence <- Residence_en %>%
filter(name_en %in% c("Seongdong-gu","Seongbuk-gu","Seodaemun-gu"))
Seongdong_Seongbuk_Seodaemun_Road <- Road_en %>%
filter(name_en %in% c("Seongdong-gu","Seongbuk-gu","Seodaemun-gu"))
Seongdong_Seongbuk_Seodaemun_StudyArea <- Seoul %>%
filter(name_en %in% c("Seongdong-gu","Seongbuk-gu","Seodaemun-gu"))
write_rds(Seongdong_Seongbuk_Seodaemun_Hospital,"Seongdong_Seongbuk_Seodaemun_Hospital.rds")
write_rds(Seongdong_Seongbuk_Seodaemun_Residence, "Seongdong_Seongbuk_Seodaemun_Residence.rds")
write_rds(Seongdong_Seongbuk_Seodaemun_Road, "Seongdong_Seongbuk_Seodaemun_Road.rds")
write_rds(Seongdong_Seongbuk_Seodaemun_StudyArea, "Seongdong_Seongbuk_Seodaemun_StudyArea.rds")
Nowon_Mapo_Jungnang_Hospital <- Hospital_en %>%
filter(name_en %in% c("Nowon-gu","Mapo-gu","Jungnang-gu"))
Nowon_Mapo_Jungnang_Residence <- Residence_en %>%
filter(name_en %in% c("Nowon-gu","Mapo-gu","Jungnang-gu"))
Nowon_Mapo_Jungnang_Road <- Road_en %>%
filter(name_en %in% c("Nowon-gu","Mapo-gu","Jungnang-gu"))
Nowon_Mapo_Jungnang_StudyArea <- Seoul %>%
filter(name_en %in% c("Nowon-gu","Mapo-gu","Jungnang-gu"))
write_rds(Nowon_Mapo_Jungnang_Hospital,"Nowon_Mapo_Jungnang_Hospital.rds")
write_rds(Nowon_Mapo_Jungnang_Residence, "Nowon_Mapo_Jungnang_Residence.rds")
write_rds(Nowon_Mapo_Jungnang_Road,"Nowon_Mapo_Jungnang_Road.rds")
write_rds(Nowon_Mapo_Jungnang_StudyArea, "Nowon_Mapo_Jungnang_StudyArea.rds")
Jung_Jongno_Gwangjin_Hospital <- Hospital_en %>%
filter(name_en %in% c("Jung-gu","Jongno-gu","Gwangjin-gu"))
Jung_Jongno_Gwangjin_Residence <- Residence_en %>%
filter(name_en %in% c("Jung-gu","Jongno-gu","Gwangjin-gu"))
Jung_Jongno_Gwangjin_Road <- Road_en %>%
filter(name_en %in% c("Jung-gu","Jongno-gu","Gwangjin-gu"))
Jung_Jongno_Gwangjin_StudyArea <- Seoul %>%
filter(name_en %in% c("Jung-gu","Jongno-gu","Gwangjin-gu"))
write_rds(Jung_Jongno_Gwangjin_Hospital,"Jung_Jongno_Gwangjin_Hospital.rds")
write_rds(Jung_Jongno_Gwangjin_Residence,"Jung_Jongno_Gwangjin_Residence.rds")
write_rds(Jung_Jongno_Gwangjin_Road,"Jung_Jongno_Gwangjin_Road.rds")
write_rds(Jung_Jongno_Gwangjin_StudyArea,"Jung_Jongno_Gwangjin_StudyArea.rds")
Gangdong_Gangbuk_Hospital <- Hospital_en %>%
filter(name_en %in% c("Gangdong-gu","Gangbuk-gu"))
Gangdong_Gangbuk_Residence <- Residence_en %>%
filter(name_en %in% c("Gangdong-gu","Gangbuk-gu"))
Gangdong_Gangbuk_Road <- Road_en %>%
filter(name_en %in% c("Gangdong-gu","Gangbuk-gu"))
Gangdong_Gangbuk_StudyArea <- Seoul %>%
filter(name_en %in% c("Gangdong-gu","Gangbuk-gu"))
write_rds(Gangdong_Gangbuk_Hospital,"Gangdong_Gangbuk_Hospital.rds")
write_rds(Gangdong_Gangbuk_Residence,"Gangdong_Gangbuk_Residence.rds")
write_rds(Gangdong_Gangbuk_Road,"Gangdong_Gangbuk_Road.rds")
write_rds(Gangdong_Gangbuk_StudyArea,"Gangdong_Gangbuk_StudyArea.rds")
Dongdaemun_Dobong_Hospital <- Hospital_en %>%
filter(name_en %in% c("Dongdaemun-gu","Dobong-gu"))
Dongdaemun_Dobong_Residence <- Residence_en %>%
filter(name_en %in% c("Dongdaemun-gu","Dobong-gu"))
Dongdaemun_Dobong_Road <- Road_en %>%
filter(name_en %in% c("Dongdaemun-gu","Dobong-gu"))
Dongdaemun_Dobong_StudyArea <- Seoul %>%
filter(name_en %in% c("Dongdaemun-gu","Dobong-gu"))
write_rds(Dongdaemun_Dobong_Hospital,"Dongdaemun_Dobong_Hospital.rds")
write_rds(Dongdaemun_Dobong_Residence,"Dongdaemun_Dobong_Residence.rds")
write_rds(Dongdaemun_Dobong_Road,"Dongdaemun_Dobong_Road.rds")
write_rds(Dongdaemun_Dobong_StudyArea,"Dongdaemun_Dobong_StudyArea.rds")
shiny::runApp('Test')
View(Nowon_Mapo_Jungnang_Hospital)
